let slider = document.getElementById("myRange");
let output = document.getElementById("demo");
let date = new Date(1584316800*1000).toLocaleDateString("en-US");
output.innerHTML = date;

// Daniel Shiffman
// http://codingtra.in
// http://patreon.com/codingtrain

// Subscriber Mapping Visualization
// https://youtu.be/Ae73YY_GAU8

let flightData;

const mappa = new Mappa('Leaflet');
let trainMap;
let canvas;

let data = [];

const options = {
  lat: 39.8,
  lng: -104.7,
  zoom: 2,
  style: "http://{s}.tile.osm.org/{z}/{x}/{y}.png"
}

function preload() {
  flightData = loadTable('covid_impact_on_airport_traffic.csv', 'header');
}

function setup() {
  canvas = createCanvas(document.querySelector('body').width, 600);
  trainMap = mappa.tileMap(options);
  trainMap.overlay(canvas);

  let maxSubs = 0;
  let minSubs = Infinity;

  for (let row of flightData.rows) {
    let latlon = [row.get('lat'), row.get('lon')];
    let year = row.get('Date').slice(0,4);
    let month = row.get('Date').slice(5,7);
    let day = row.get('Date').slice(8,10);
    let date = new Date(Date.UTC(year, month-1, day));
    let timestamp = date.valueOf()/1000;
    if (latlon) {
      let lat = latlon[0];
      let lon = latlon[1];
      let count = Number(row.get('PercentOfBaseline'));
      data.push({ lat, lon, count, date, timestamp });
      if (count > maxSubs) {
        maxSubs = count;
      }
      if (count < minSubs) {
        minSubs = count;
      }
    }
  }

  let minD = sqrt(minSubs);
  let maxD = sqrt(maxSubs);

  for (let country of data) {
    country.diameter = map(sqrt(country.count), minD, maxD, 1, 5);
  }
}

function draw() {
  clear();
  for (let country of data) {
    if (country.timestamp == slider.value) {
      const pix = trainMap.latLngToPixel(country.lat, country.lon);
      fill(frameCount % 255, 0, 200, 100);
      const zoom = trainMap.zoom();
      const scl = pow(2, zoom); // * sin(frameCount * 0.1);
      ellipse(pix.x, pix.y, country.diameter * scl);
    }
  }
}

var values = [1584316800, 1584403200, 1584489600, 1584576000, 1584662400, 1584748800, 1584835200, 1584921600, 1585008000, 1585094400, 1585180800, 1585267200, 1585353600, 1585440000, 1585526400, 1585612800, 1585699200, 1585785600, 1585872000, 1585958400, 1586044800, 1586131200, 1586217600, 1586304000, 1586390400, 1586476800, 1586563200, 1586649600, 1586736000, 1586822400, 1586908800, 1586995200, 1587081600, 1587168000, 1587254400, 1587340800, 1587427200, 1587513600, 1587600000, 1587686400, 1587772800, 1587859200, 1587945600, 1588032000, 1588118400, 1588204800, 1588291200, 1588377600, 1588464000, 1588550400, 1588636800, 1588723200, 1588809600, 1588896000, 1588982400, 1589068800, 1589155200, 1589241600, 1589328000, 1589414400, 1589500800, 1589587200, 1589673600, 1589760000, 1589846400, 1589932800, 1590019200, 1590105600, 1590192000, 1590278400, 1590364800, 1590451200, 1590537600, 1590624000, 1590710400, 1590796800, 1590883200, 1590969600, 1591056000, 1591142400, 1591228800, 1591315200, 1591401600, 1591488000, 1591574400, 1591660800, 1591747200, 1591833600, 1591920000, 1592006400, 1592092800, 1592179200, 1592265600, 1592352000, 1592438400, 1592524800, 1592611200, 1592697600, 1592784000, 1592870400, 1592956800, 1593043200, 1593129600, 1593216000, 1593302400, 1593388800, 1593475200, 1593561600, 1593648000, 1593734400, 1593820800, 1593907200, 1593993600, 1594080000, 1594166400, 1594252800, 1594339200, 1594425600, 1594512000, 1594598400, 1594684800, 1594771200, 1594857600, 1594944000, 1595030400, 1595116800, 1595203200, 1595289600, 1595376000, 1595462400, 1595548800, 1595635200, 1595721600, 1595808000, 1595894400, 1595980800, 1596067200, 1596153600, 1596240000, 1596326400, 1596412800, 1596499200, 1596585600, 1596672000, 1596758400, 1596844800, 1596931200, 1597017600, 1597104000, 1597190400, 1597276800, 1597363200, 1597449600, 1597536000, 1597622400, 1597708800, 1597795200, 1597881600, 1597968000, 1598054400, 1598140800, 1598227200, 1598313600, 1598400000, 1598486400, 1598572800, 1598659200, 1598745600, 1598832000, 1598918400, 1599004800, 1599091200, 1599177600, 1599264000, 1599350400, 1599436800, 1599523200, 1599609600, 1599696000, 1599782400, 1599868800, 1599955200, 1600041600, 1600128000, 1600214400, 1600300800, 1600387200, 1600473600, 1600560000, 1600646400, 1600732800, 1600819200, 1600905600, 1600992000, 1601078400, 1601164800, 1601251200, 1601337600, 1601424000, 1601510400, 1601596800, 1601683200, 1601769600, 1601856000, 1601942400, 1602028800, 1602115200, 1602201600, 1602288000, 1602374400, 1602460800, 1602547200, 1602633600, 1602720000, 1602806400];

slider.oninput = function() {
  let newDate = new Date((values[this.value])*1000).toLocaleDateString("en-US");
  output.innerHTML = newDate;
}